using Xunit;
using CustomerServiceApp;

public class CustomerServiceTests
{
    [Fact]
    public void TestQueueDefaultSize()
    {
        var service = new CustomerService(0);
        Assert.Equal(10, service.MaxSize);
    }

    [Fact]
    public void TestAddCustomerSuccess()
    {
        var service = new CustomerService(2);
        var result = service.AddNewCustomer("Alice", "123", "Password reset");
        Assert.True(result);
        Assert.Equal(1, service.GetQueueSize());
    }

    [Fact]
    public void TestAddCustomerFullQueue()
    {
        var service = new CustomerService(1);
        service.AddNewCustomer("Alice", "123", "Issue A");
        var result = service.AddNewCustomer("Bob", "124", "Issue B"); // Should fail
        Assert.False(result);
    }

    [Fact]
    public void TestServeCustomer()
    {
        var service = new CustomerService(2);
        service.AddNewCustomer("Alice", "123", "Internet Issue");
        var served = service.ServeCustomer();
        Assert.NotNull(served);
        Assert.Equal("Alice (123) : Internet Issue", served.ToString());
    }

    [Fact]
    public void TestServeEmptyQueue()
    {
        var service = new CustomerService(2);
        var served = service.ServeCustomer();
        Assert.Null(served);
    }
}
